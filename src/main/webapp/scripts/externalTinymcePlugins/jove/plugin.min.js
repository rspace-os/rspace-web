tinymce.PluginManager.add('jove', function (editor, url) {

    editor.addCommand("cmdJove", function () {
        editor.windowManager.openUrl({
            title: "Import protocol videos from JoVE",
            url: url + "/dialog.html",
            width: 1400,
            height: 800,
            buttons: [
                {
                    type: "cancel",
                    text: "Cancel"
                },
                {
                    type: "custom",
                    name: "insert",
                    text: "Insert",
                    primary: true
                }
            ],
            onAction(dialogApi, button) {
                if (button.name == "insert") {
                    editor.fire("jove-insert");
                }
            },
            onClose() {
            },
            onMessage(dialogApi, details) {
                let button = $("button[title='Insert']");
                if (details.mceAction == "disable") {
                    button.attr("disabled", "disabled");
                } else if (details.mceAction == "enable") {
                    button.prop("disabled", null);
                    button.removeAttr("disabled");
                }
            }
        });
    });

    editor.ui.registry.addButton('jove', {
        icon: 'jove',
        tooltip: 'Import protocol videos from JoVE',
        onAction: function () {
            editor.execCommand("cmdJove");
            RS.trackEvent('JoveIntegrationUsed');
        },
    });

    editor.ui.registry.addMenuItem('optJove', {
        text: 'From JoVE',
        icon: 'jove',
        onAction: function () {
            editor.execCommand("cmdJove");
            RS.trackEvent('JoveIntegrationUsed');
        },
    });

    if(!window.insertActions) window.insertActions = new Map();
    window.insertActions.set("optJove", {
      text: 'From JoVE',
      icon: 'jove',
      action: () => {
        editor.execCommand("cmdJove");
        RS.trackEvent('JoveIntegrationUsed');
      },
    });
});
