/*
TinyMCE plugin for Google Drive.

Uses the front-end Google API Client (gapi) and Google sign-in (gsi) libraries,
via scripts imported in `header.jsp`.
 */

let accessToken;

async function insertFromGoogleDrive() {
	if(!gdClientId || !gdScope){
		apprise("Missing required system properties for google drive "
				+ "integration. Please speak to your rspace administrator");
	} else {
		await gapi.load('client:picker');

		const client = await google.accounts.oauth2.initTokenClient({
			client_id: gdClientId,
			scope: gdScope,
			callback: onTokenResponse,
			error_callback: onTokenResponseError,
		});

		if(!accessToken){
			// show consent screen for user login and authorisation
			client.requestAccessToken({prompt: 'consent'});
		} else {
			// skip consent screen when user has already consented and has a token
			client.requestAccessToken({prompt: ''});
		}
	}
}

function onTokenResponse(response){
	accessToken = response.access_token;
	showPicker();
}

function onTokenResponseError(response){
	apprise('Unable to contact Google Drive. Please try again later or '
			+ 'ensure that your network connection is active and reload the page.');
}

function showPicker() {
	picker = new google.picker.PickerBuilder()
		.setDeveloperKey(gdDeveloperKey)
		.setAppId(gdClientId)
		.setOAuthToken(accessToken)
		.addView(google.picker.ViewId.DOCS)
		.setCallback(pickerCallback)
		.build();
	picker.setVisible(true);
}

/*
When a Google Drive file is picked, grab some metadata and embed a link in the
rspace document.
 */
function pickerCallback(data) {
	if (data.action === google.picker.Action.PICKED) {
		const doc = data[google.picker.Response.DOCUMENTS][0];
		googleDriveLinkUrl = doc[google.picker.Document.EMBEDDABLE_URL] || doc[google.picker.Document.URL];

		const name = doc[google.picker.Document.NAME];
		const extension = RS.getFileExtension(name);
		const iconPath = RS.getIconPathForExtension(extension);
		const docId = doc.id;

		const json = {
			id: 'googledrive-' + docId,
			fileStore: 'Google Drive',
			recordURL: googleDriveLinkUrl,
			name: name,
			iconPath: iconPath,
			badgeIconPath: '/images/icons/drive_icon.png'
		};
		RS.insertTemplateIntoTinyMCE('insertedExternalDocumentTemplate', json);
	}
}

tinymce.PluginManager.add('googledrive', function (editor, url) {
	editor.addCommand('cmdGoogleDrive', function () {
		insertFromGoogleDrive();
	});

	// adds editor button
	editor.ui.registry.addButton('googledrive', {
		tooltip: 'Insert from Google Drive',
		icon: 'google_drive',
		onAction: function () {
			editor.execCommand("cmdGoogleDrive");
		}
	});

	// adds From Google Drive menu item
	editor.ui.registry.addMenuItem('optGoogleDrive', {
		text: 'From Google Drive',
		icon: 'google_drive',
		onAction: function () {
			editor.execCommand("cmdGoogleDrive");
		}
	});

	// adds menu item to Insert menu
  if(!window.insertActions) window.insertActions = new Map();
  window.insertActions.set("optGoogleDrive", {
    text: 'From Google Drive',
    icon: 'google_drive',
    action: () => {
			editor.execCommand("cmdGoogleDrive");
    },
  });

});
