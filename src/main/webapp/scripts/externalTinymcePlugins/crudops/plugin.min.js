/**
 * Crudops plugin
 * Author: fran
 * Date: 23/09/2015
 */

tinymce.PluginManager.add('crudops', function (editor, url) {
  // ensure slash-menu actions is an Map to be appended to
  if(!window.insertActions) window.insertActions = new Map();

  editor.addCommand('cmdSaveContinue', function () { saveStructuredDocument(false, false); });
  editor.addCommand('cmdSaveView', function () { saveStructuredDocument(false, true); });
  editor.addCommand('cmdSaveClose', function () { saveStructuredDocument(true, true); });
  editor.addCommand('cmdSaveClone', function () { saveCopyStructuredDocument(true); });
  editor.addCommand('cmdSaveNew', function () { saveNewStructuredDocument(true); });

  var responsiveFileUploadImage, responsiveInsertFileUploadImage;

  if (DeviceMeta.isMobileOrTablet()) {
    setForMobile();
  } else {
    setForNonMobile();
  }

  function setForMobile() {
    responsiveFileUploadImage = { 
      icon: "camera", 
      tooltip: "Upload a file from your mobile device" 
    };

    responsiveInsertFileUploadImage = { 
      icon: "camera",
      text: "Upload a file from your mobile device"
    };

    setButtons()
  }

  function setForNonMobile() {
    responsiveFileUploadImage = { 
      icon: "browse", 
      tooltip: "Insert file from computer" 
    };

    responsiveInsertFileUploadImage = { 
      icon: "browse",
      text: "File from computer"
    };

    setButtons()
  }

  function setButtons() {

    editor.ui.registry.addButton('btnFromComputer', {
      ...responsiveFileUploadImage,
      onAction: function () {
        var fieldId = getFieldIdFromTextFieldId(editor.id);
        $("#fromLocalComputerToGallery_" + fieldId).trigger('click');
      },
    });
  
    editor.ui.registry.addMenuItem('optFromComputer', {
      ...responsiveInsertFileUploadImage,
      shortcut: 'Ctrl+Shift+2',
      onAction: function () {
        var fieldId = getFieldIdFromTextFieldId(editor.id);
        $("#fromLocalComputerToGallery_" + fieldId).trigger('click');
      },
    });

    window.insertActions.set("optFromComputer", {
      ...responsiveInsertFileUploadImage,
      action: () => {
        var fieldId = getFieldIdFromTextFieldId(editor.id);
        $("#fromLocalComputerToGallery_" + fieldId).trigger('click');
      },
    });
  
  }

  editor.ui.registry.addButton('btnSave', {
    icon: "save",
    tooltip: 'Save',
    onAction: function () { editor.execCommand("cmdSaveContinue"); },
  });

  editor.ui.registry.addMenuItem('optSave', {
    text: 'Save',
    tooltip: 'Save',
    icon: "save",
    onAction: function () { editor.execCommand("cmdSaveContinue"); },
  });

  // RSPAC-766. canCopy is set in <script> tag in structuredDocument.jsp
  if (canCopy) {
    editor.ui.registry.addNestedMenuItem('optSaves', {
      text: 'Save...',
      icon: "save",
      getSubmenuItems: function() {
        return  [
          { type: "menuitem", text: "Save & View", onAction: function () { editor.execCommand("cmdSaveView"); } },
          { type: "menuitem", text: "Save & Close", onAction: function () { editor.execCommand("cmdSaveClose"); } },
          { type: "menuitem", text: "Save & Clone", onAction: function () { editor.execCommand("cmdSaveClone"); } },
          { type: "menuitem", text: "Save & New", onAction: function () { editor.execCommand("cmdSaveNew"); } }
        ]
      }
    });
  } else {
    editor.ui.registry.addNestedMenuItem('optSaves', {
      text: 'Save...',
      icon: "save",
      getSubmenuItems: function() {
        return [
          { type: "menuitem", text: "Save & View", onAction: function () { editor.execCommand("cmdSaveView"); } },
          { type: "menuitem", text: "Save & Close", onAction: function () { editor.execCommand("cmdSaveClose"); } }
        ]
      }
    });
  }

  editor.ui.registry.addMenuItem('indent', {
      text: 'Increase indent',
      context: 'format',
      icon: 'indent',
      onAction: function () {
        editor.execCommand("Indent");
      }
  });
  editor.ui.registry.addMenuItem('outdent', {
      text: 'Decrease indent',
      context: 'format',
      icon: 'outdent',
      onAction: function () {
        editor.execCommand("Outdent");
      }
  });

});
