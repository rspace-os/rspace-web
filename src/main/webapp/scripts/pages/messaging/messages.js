/*
  * Javascript file to provide sorting, paginating and management of messages
  *  
  * listings generated by messages.tag.
  * This js file provides javascript for html defined in messages.tag.
  * You also need to use notifications.js as well since the poll() method is defined there.
  * 
  * To use this in an HTML page there are 3 things to set up:
  * 
  * 1) include messagetoolbar; this is where polling results go:
  * <div id="messageToolbar" style="height: 15px; text-align: center;">
	<span class="messagebox" id="noMessages"></span>
	</div>
	*
	* 2) in your document.ready() function, call:
	* doPoll();//poll immediately for notifications
		//set up 10s poll interval for new notifications.
		pollForNewNotificationsAtInterval();
	* which sets up the polling.
	*
  */
    $(document).ready(function (){
      
      function decrementMessagesBadge() {
        const badge = $('#messagesBadge');
        if (badge.length > 0) {
            let count = parseInt(badge.text(), 10);
            if (count > 0) {
                count--;
                badge.text(count);
                if (count === 0) {
                    badge.hide();
                }
            }
        }
      }

    	// handles order-by pagination
    	$('body').on("click", '.morOrderBy', function(event) {
    		var contentDiv$=$(this).closest('.messageList');
    		if(contentDiv$.size() == 0){
    			return;
    		}
    		var orderBy = $(this).attr('id').split("_")[1];
    		$.get(createURL('/dashboard/ajax/allMessages?orderBy='+orderBy+'&sortOrder='+'DESC'),
    				function (xhr) {
    			contentDiv$.html(xhr);
    		});
    	});
    	
    	// opens new page of results
    	$('body').on("click", '.mor_pagelink', function(event) {
    		var contentDiv$=$(this).closest('.messageList');
    		if (contentDiv$.size() == 0){
    			return;
    		}
    		var link = $(this).attr('id').split("_")[1];
    		$.get(createURL(link),
    				function (xhr) {
    			contentDiv$.html(xhr);
    		});
    	});
    
    	// handles polling
    	$('body').on("click", '#openMessageDlgLink', function (e){
    		$('#messageDlg').dialog ('open');
        RS.trackEvent("user:open:messages_dialog:workspace");
    	});
    	
    	$('body').on("change", '.messageStatusChooser', function(e){
    		var div$=$(this).next('.updateDetails');
    		 div$.show('fade');
    		 div$.find('.temp').remove();
    	});
    	
    	// removes a message from the UI
    	$('body').on("click", '.hideMessage', function (e) {
    		var contentDiv$=$(this).closest('.messageList');
    		var tr$ = $(this).closest('tr');
    		var id = getNotificnIDArrayFromRows (tr$);
    		var postData = {
				messageOrRequestId:id[0],
				status:"COMPLETED"
			};
    		$.post(createURL('/dashboard/ajax/messageStatus'), postData,
				function (xhr) {
					tr$.hide("fade", function () {
						if( $('tr.notificationRow').filter(":visible").size() == 0 ){
          		contentDiv$.html("There are no active messages.");
        	  }  
					});
          decrementMessagesBadge();
				}
    		);
    	});
    	
    	$('body').on('click', '.replyMsgLink', function (e){
    		e.preventDefault();
    		if (_replyMessageTooLong()) {
    		    return;
    		}

    		var link$= $(this);
    		// progress indicator
    		link$.parent().append("<p>Updating...</p>");
    		var tr$ = link$.closest('tr');
    		var id = getNotificnIDArrayFromRows (tr$);
    		var postData = {
				messageOrRequestId:id[0],
			};
    		var optMessageTxtBox=tr$.find('.replyMessageArea');
    		if(isBlank(optMessageTxtBox.val())){
    			optMessageTxtBox.val('Please enter a message here!');
    			return;
    		}
			
			postData.message = optMessageTxtBox.val();
			var jqxhr = $.post(createURL('/dashboard/ajax/messageReply'), postData,
				function (xhr) {
					link$.siblings(":last").remove();
					if (xhr.data != 'Success') {
						apprise("Message sending failed - please try again, or report the error.");
					} else {
						tr$.find('.repliedMsg').show('fade');
					}
				});
            jqxhr.fail(function () {
                RS.ajaxFailed("Send reply message", false, jqxhr);
            });
    	});
    	
    	// handles status update of request
    	$('body').on("click", '.updateReplyLink', function (event) {
    		event.preventDefault();
            if (_replyMessageTooLong()) {
                return;
            }
            var link$= $(this);
    		var tr$ = link$.closest('tr');
    		tr$.find('.temp').remove();
    		var id = getNotificnIDArrayFromRows (tr$);
    		var curStatus=tr$.find('.currentStatus').val();
    	
    		var status =tr$.find('.messageStatusChooser').find(":selected").val();
    		if (curStatus == status){
    			tr$.find('.updateDetails').append("<p class='temp'>No change in status!");
    			return;
    		}
    		var postData={
				messageOrRequestId:id[0],
				status:status
			};
		    var optMessageTxtBox=tr$.find('.replyMessageArea');
			if (optMessageTxtBox.val().length > 0) {
				postData.optionalMessage=optMessageTxtBox.val();
			}
    			
    		var jqxhr = $.post(createURL('/dashboard/ajax/messageStatus'), postData,
				function (xhr) {
				    if (xhr.data){
    					tr$.find('.currentStatus').val(status);
    					tr$.find('.updateDetails').hide('fade');
    					if (status=='COMPLETED' || status=='REJECTED') {
    						msgChooser$ = tr$.find('.messageStatusChooser');
    						msgChooser$.html("");// clear options
    						msgChooser$.append("<option selected=selected value='"+status+"'>"+status+"</option>");
    						tr$.find('.updateDetails').hide();
    					}
				    }
				}
    		);
            jqxhr.fail(function () {
				$(event.target).prop( "disabled", false );
				$(event.target).prop( "textContent", "Update & Reply" );
                RS.ajaxFailed("Update message status", false, jqxhr);
            });
    	});
    	
    	// set up pop-up dialog with message listings, dialog defined in headers.jsp
    	$('#messageDlg').dialog({
    		resizable: true,
    		title: "Messages and Requests",
    		modal: true,
    		autoOpen:false,
    		height:500,
    		minWidth:620,
    		hide:'fade',
    		show:'fade',
    		open: function(  ) {
    			
    			$.get(createURL('/dashboard/ajax/allMessages'), function (html){
    				$('.messageList').html(html);
    				$('.messageContent').each(function (index) {
    					var currHTml = $(this).html();
    	    			var unescapedMsg = RS.unescape(currHTml);
    	    			$(this).html(unescapedMsg); 
    				}); 
    			})
    			// load up on dialog open
    		},
    		close: doPoll,// refresh count after possible modification. This is defined in notifications.js
    		buttons: {
    			"Close": function() {
    				$(this).dialog("close");
   				}
    		}
    	});

    });
    
    function isBlank(str) {
        return (!str || /^\s*$/.test(str));
    }
    
    // gets notification id from link id in form 'descriptor_XXX' where XXX is the id.
    function getNotificnIDArrayFromRows (wrappedRow$){
        return 	wrappedRow$.map(function (index, item){
			      return $(item).attr('id').split("_")[1];
		    }).get();
    }

    function _replyMessageTooLong() {
        var messageLength = $('.replyMessageArea').val().length;
        if (messageLength > 2000) {
            apprise('Reply message is too long <br /> (' + messageLength + '/2000 characters)');
            return true;
        }
        return false;
    }

