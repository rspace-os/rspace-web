// @flow

type HasAccess<T> = {|
  isAccessible: true,
  value: T,
|};

type NoAccess = {|
  isAccessible: false,
|};

export type Permissioned<T> = HasAccess<T> | NoAccess;

declare export function mapPermissioned<T, U>(
  permissionedData: Permissioned<T>,
  f: (T) => U
): Permissioned<U>;

declare export function orElseIfNoAccess<T>(
  permissionedData: Permissioned<T>,
  orElse: T
): T;
