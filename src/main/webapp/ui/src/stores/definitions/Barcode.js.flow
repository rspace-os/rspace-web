//@flow

import { type Node } from "react";
import { type Id } from "./BaseRecord";
import { type Username } from "./Person";
import { type IsoTimestamp, type _LINK } from "../../util/types";
import { type URL } from "../../util/types";

export type GeneratedBarcodeAttrs = {|
  data: BarcodeValue,
|};

type FromServer = {|
  id: Id,
  created: IsoTimestamp,
  createdBy: Username,
  data: BarcodeValue,
  description: string,
  _links: Array<_LINK>,
|};

type NewlyCreated = {|
  data: BarcodeValue,
  newBarcodeRequest: true,
  description: string,
|};

type Deleted = {|
  id: Id,
  data: BarcodeValue,
  description: string,
  deleteBarcodeRequest: true,
  imageUrl: ?URL,
|};

export type PersistedBarcodeAttrs = FromServer | NewlyCreated | Deleted;
export type BarcodeAttrs = GeneratedBarcodeAttrs | PersistedBarcodeAttrs;

export interface BarcodeRecord {
  data: BarcodeValue;
  description: string;

  imageUrl: ?URL;
  fetchImage(): Promise<File>;

  +paramsForBackend: {};

  deletedCopy(): ?BarcodeRecord;
  +isDeleted: boolean;
  +isDeletable: boolean;

  setDescription(string): void;
  +descriptionIsEditable: boolean;
  +renderedDescription: Node;
}

