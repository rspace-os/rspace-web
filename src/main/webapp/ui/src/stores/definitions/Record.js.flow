//@flow

import { type URL } from "../../util/types";
import { type Container } from "./Container";
import { type Person } from "../definitions/Person";
import { type InventoryRecord } from "./InventoryRecord";
import { type Tag } from "./Tag";
import { type LinkableRecord } from "./LinkableRecord";
import { type GlobalId } from "./BaseRecord";

export type ReadAccessLevel = "full" | "limited" | "public";

export type Thumbnail = ?URL;

export type RecordDetails = {|
  hideGlobalId?: boolean,

  modified?: [string, string],
  owner?: ?string,
  description?: ?string,
  tags?: Array<Tag>,
  quantity?: string,
  contents?: Container,
  location?: InventoryRecord,
  size?: number,
  sample?: InventoryRecord,
  version?: number,
  galleryFile?: LinkableRecord,
|};

export interface Record extends LinkableRecord {
  owner: ?Person;
  thumbnail?: Thumbnail;

  +deleted: boolean;
  +cardTypeLabel: string;
  +currentUserIsOwner?: ?boolean;
  +readAccessLevel?: ReadAccessLevel;

  +recordDetails: RecordDetails;
}

