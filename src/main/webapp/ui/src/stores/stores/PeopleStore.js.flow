// @flow

import ElnApiService from "../../common/ElnApiService";
import InvApiService from "../../common/InvApiService";
import RsSet from "../../util/set";
import { type WorkbenchId } from "../definitions/Container";
import { type Username, type PersonAttrs } from "../definitions/Person";
import ContainerModel, { type ContainerAttrs } from "../models/ContainerModel";
import PersonModel from "../models/PersonModel";
import { type RootStore } from "./RootStore";
import MemoisedFactory from "../models/Factory/MemoisedFactory";
import { observable, makeObservable, runInAction, action } from "mobx";
import { type Group } from "../definitions/Group";

declare export default class PeopleStore {
  rootStore: RootStore;
  currentUser: ?PersonModel;
  groupMembers: ?RsSet<PersonModel>;
  currentUsersGroups: ?Promise<Array<Group>>;

  constructor(rootStore: RootStore): PeopleStore;

  fetchCurrentUser(): Promise<?PersonModel>;

  fetchMembersOfSameGroup(): Promise<RsSet<PersonModel>>;

  searchPeople(searchTerm: string): Promise<RsSet<PersonModel>>;

  searchGroups(searchTerm: string): Promise<RsSet<Group>>;

  getUser(username: Username): Promise<?PersonModel>;

  getPersonFromBenchId(id: WorkbenchId): Promise<PersonModel>;

  fetchCurrentUsersGroups(): Promise<Array<Group>>;
}

