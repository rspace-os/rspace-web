// @flow

import {
  runInAction,
  action,
  computed,
  observable,
  makeObservable,
} from "mobx";
import type { RootStore } from "./RootStore";
import ElnApiService from "../../common/ElnApiService";

export type UnitCategory =
  | "dimensionless"
  | "volume"
  | "mass"
  | "temperature"
  | "molarity"
  | "concentration";

export type Unit = {|
  id: number,
  label: string,
  category: UnitCategory,
  description: string,
|};

declare export default class UnitStore {
  rootStore: RootStore;
  loading: boolean;
  units: Array<Unit>;

  constructor(rootStore: RootStore): UnitStore;

  fetchUnits(): Promise<void>;

  get temperatureUnits(): Array<Unit>;

  get massUnits(): Array<Unit>;

  get volumeUnits(): Array<Unit>;

  unitsOfCategory(categories: Array<string>): Array<Unit>;

  getUnit(unitId: number): ?Unit;

  persistUnits(): void;

  get allCategories(): Array<string>;
}

