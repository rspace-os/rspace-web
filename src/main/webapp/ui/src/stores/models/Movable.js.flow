//@flow

import type GlobalId from "../models/Result";
import { isoToLocale } from "../../util/Util";
import React from "react";
import { type AdjustableTableRowOptions } from "../definitions/Tables";
import getRootStore from "../stores/RootStore";
import ContainerModel, { type ContainerAttrs } from "./ContainerModel";
import { type Factory } from "../definitions/Factory";
import { type InventoryRecord } from "../definitions/InventoryRecord";
import { type Location, type Container } from "../definitions/Container";
import { type ReadAccessLevel } from "../definitions/Record";

declare export class Movable {
  parentContainers: ?Array<ContainerAttrs>;
  immediateParentContainer: ?ContainerModel;
  allParentContainers: () => Array<Container>;
  rootParentContainer: ?Container;
  parentLocation: ?Location;
  lastNonWorkbenchParent: ContainerModel;
  lastMoveDate: ?string;
  created: string;
  readAccessLevel: ReadAccessLevel;

  initializeMovableMixin(factory: Factory): void;
  hasParentContainers(): boolean;
  isMovable(): boolean;
  isInCurrentUsersWorkbench(): boolean;
}
