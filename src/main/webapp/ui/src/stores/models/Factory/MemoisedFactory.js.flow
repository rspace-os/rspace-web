//@flow

import { type PersonId, type PersonAttrs } from "../../definitions/Person";
import { type GlobalId } from "../../definitions/BaseRecord";
import PersonModel from "../PersonModel";
import Result from "../InventoryBaseRecord";
import AlwaysNewFactory from "./AlwaysNewFactory";
import { type Factory } from "../../definitions/Factory";
import { type DocumentAttrs, type Document } from "../../definitions/Document";

declare export default class MemoisedFactory extends AlwaysNewFactory {
  recordCache: Map<GlobalId, Result>;
  personCache: Map<PersonId, PersonModel>;
  documentCache: Map<GlobalId, Document>;

  constructor(): MemoisedFactory;

  newRecord(params: any): Result;

  newPerson(attrs: PersonAttrs): PersonModel;

  newDocument(attrs: DocumentAttrs): Document;

  newFactory(): Factory;
}

