//@flow

import { type Node, type ComponentType } from "react";
import { type Identifier } from "../../useIdentifiers";
import { type Optional } from "../../../util/optional";

export type PrinterType = "GENERIC" | "LABEL";
export type PrintLayout = "BASIC" | "FULL";
export type PrintSize = "SMALL" | "LARGE";

export type PrintOptions = {
  printerType: PrinterType,
  printLayout: PrintLayout,
  printSize: PrintSize,

  /*
   * Each label can be printed multiple times (e.g. for raffle books).
   * - If the number is 1 then the labels are printed in a grid layout. and if
   * - If the number is 2 then each label is printed on its own row, wrapping
   *   where necessary.
   * - Any other numberical value is invalid.
   */
  printCopies?: "1" | "2",
  printIdentifierType?: "IGSN",
};

type PrintDialogArgs = {|
  showPrintDialog: boolean,
  onClose: () => void,
  itemsToPrint: $ReadOnlyArray<Identifier>,
  printerType?: PrinterType,
  printSize?: PrintSize,
  /* n/a for non-contextMenu cases */
  closeMenu?: () => void,
|};

type OptionsWrapperArgs = {|
  printOptions: PrintOptions,
  setPrintOptions: (PrintOptions) => void,
|};

declare export function PrintOptionsWrapper(args: OptionsWrapperArgs): Node;

declare function PrintDialog(args: PrintDialogArgs): Node;

declare export default ComponentType<PrintDialogArgs>;
