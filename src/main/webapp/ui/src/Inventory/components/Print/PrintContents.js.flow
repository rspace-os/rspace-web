//@flow

import React, { forwardRef, type ComponentType } from "react";
import { type PrintOptions } from "./PrintDialog";
import { type GlobalId } from "../../../stores/definitions/BaseRecord";
import { Optional } from "../../../util/optional";

export type PrintLabelContents = {|
  itemLabel: string,
  locationLabel: string,
  identifier: Optional<{ doi: string }>,
  globalId: Optional<GlobalId>,
  barcodeUrl: string,
|};

/*
 * "screen"        - for previewing print on screen
 * "multiplePrint" - for printing multiple items in a grid for a
 *                   regular printer
 * "singlePrint"   - for printing single items for a zebra printer
 */
type Target = "screen" | "multiplePrint" | "singlePrint";

type PrintContentsArgs = {|
  printOptions: PrintOptions,
  itemsToPrint: $ReadOnlyArray<PrintLabelContents>,
  imageLinks?: $ReadOnlyArray<string>,
  target: Target,
|};

type PreviewPrintItemArgs = {|
  index: number,
  printOptions: PrintOptions,

  /*
   * If `printOptions.printIdentifierType` is "IGSN", then `printLabelContents`
   * SHOULD have a present identifier. If it does not then nothing will be
   * rendered.
   */
  printLabelContents: PrintLabelContents,

  imageLinks?: $ReadOnlyArray<string>,
  forPrint?: boolean, // false for screen preview
  target: Target,
|};

declare export var PreviewPrintItem: ComponentType<PreviewPrintItemArgs>;

declare export default ComponentType<PrintContentsArgs>;
