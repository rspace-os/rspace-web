//@flow

import {
  type GalleryFile,
  type Description,
  type Id,
} from "./useGalleryListing";
import { type GallerySection } from "./common";
import RsSet from "../../util/set";

export opaque type Destination =
  | {| key: "root" |}
  | {| key: "folder", folder: GalleryFile |};

declare export function rootDestination(): Destination;

declare export function folderDestination(folder: GalleryFile): Destination;

declare export function useGalleryActions(): {|
  uploadFiles: (
    parentId: Id,
    files: $ReadOnlyArray<File>,
    options?: { originalImageId: Id, ... }
  ) => Promise<void>,
  createFolder: (parentId: Id, name: string) => Promise<void>,
  moveFiles: (
    section: GallerySection,
    destination: Destination,
    files: RsSet<GalleryFile>
  ) => Promise<void>,
  deleteFiles: (files: RsSet<GalleryFile>) => Promise<void>,
  duplicateFiles: (files: RsSet<GalleryFile>) => Promise<void>,
  rename: (file: GalleryFile, newName: string) => Promise<void>,
  uploadNewVersion: (
    folderId: Id,
    file: GalleryFile,
    newFile: File
  ) => Promise<void>,
  changeDescription: (
    file: GalleryFile,
    newDescription: Description
  ) => Promise<void>,
  download: (files: RsSet<GalleryFile>) => Promise<void>,
|};

