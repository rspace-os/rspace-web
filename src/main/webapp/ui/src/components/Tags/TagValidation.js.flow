//@flow

import { type Tag } from "../../stores/definitions/Tag";

export const MAX_LENGTH = 200;

opaque type TagValidation =
  | {| reason: "NoIssues" |}
  | {| reason: "OntologiesAreEnforced" |}
  | {|
      reason: "NoIssuesWithSourceInformation",
      version: string,
      filename: string,
    |}
  | {| reason: "AlreadySelected" |}
  | {| reason: "InvalidChar", char: string |}
  | {|
      reason: "InvalidWhitespace",
      detail: "Prefix" | "Suffix" | "Consecutive",
    |}
  | {|
      reason: "TooLong",
    |}
  | {|
      reason: "TooShort",
    |};

declare export const checkTagString: (tag: string) => TagValidation;
declare export const checkUserInputString: (tag: string) => TagValidation;

type InternalTag = {|
  ...Tag,
  selected: boolean,
|};
declare export const checkInternalTag: (tag: InternalTag, { enforceOntologies: boolean }) => TagValidation;

declare export const isAllowed: (tagValidation: TagValidation) => boolean;
declare export const helpText: (tagValidation: TagValidation) => ?string;
