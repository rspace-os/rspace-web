//@flow

import { type Node } from "react";

export type RadioOption<OptionValue: string> = {
  label: Node,
  value: OptionValue,
  editing?: boolean,
};

export type RadioFieldArgs<OptionValue: string> = {|
  name: string,
  onChange: ({ target: { value: ?OptionValue, name: string, ... } }) => void,
  options: Array<RadioOption<OptionValue>>,
  value: ?OptionValue,
  allowOptionDeletion?: boolean,
  allowRadioUnselection?: boolean,
  disabled?: boolean,
  hideWhenDisabled?: boolean,
  labelPlacement?: "top" | "start" | "bottom" | "end",
  noValueLabel?: ?string,
  onOptionChange?: (
    number,
    {| label: string, value: OptionValue, editing: true |}
  ) => void,
  onOptionRemove?: (number) => void,
  row?: boolean,
  smallText?: boolean,
|};

declare export default function RadioField<OptionValue: string>(RadioFieldArgs<OptionValue>): Node;

declare export function OptionHeading({|
  children: Node,
|}): Node;

declare export function OptionExplanation({|
  children: Node,
  "data-testid"?: string,
|}): Node;
