// @flow

import { type Node } from "react";
import type { HasEditableFields } from "../../stores/definitions/Editable";
import { type BlobUrl } from "../../util/types";
import type { Attachment } from "../../stores/definitions/Attachment";
import { type GalleryFile } from "../../eln/gallery/useGalleryListing";

export type AttachmentFieldArgs<FieldOwner> = {|
  attachment: ?Attachment,
  onAttachmentChange: (File | GalleryFile) => void,
  onChange: ({| target: HTMLInputElement |}) => void,
  value: string, // for description

  /**
   * This is used for setting the preview image, if the attachment can be
   * displayed as an image.
   */
  fieldOwner: FieldOwner,

  disabled?: boolean,

  /*
   * There are times when we want to allow the user to provide a description of
   * an attachment whilst not being able to attach any actual files, for
   * example on templates. That is when this prop should be true.
   */
  disableFileUpload?: boolean,

  error?: boolean,
  helperText?: string,
  noValueLabel?: ?string,
|};

declare function AttachmentField<
  Fields: {
    image: ?BlobUrl,
    newBase64Image: ?string,
    ...
  },
  FieldOwner: HasEditableFields<Fields>
>(props: AttachmentFieldArgs<FieldOwner>): Node;

declare export default typeof AttachmentField;
